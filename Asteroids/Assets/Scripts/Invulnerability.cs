using System;
using System.Collections;
using UnityEngine;

[RequireComponent(typeof(SpriteRenderer), typeof(Collider2D))]
public class Invulnerability : MonoBehaviour
{
    [SerializeField] private float _time;
    [SerializeField] private float _flickTime;
    [SerializeField] private float _flickerFrequency;

    private SpriteRenderer _renderer;
    private Collider2D _collider;

    private void Awake()
    {
        _renderer = GetComponent<SpriteRenderer>();
        _collider = GetComponent<Collider2D>();
    }

    private void OnEnable()
    {
        StartCoroutine(BecomeInvulnerable());
    }

    private IEnumerator BecomeInvulnerable()
    {
        _collider.enabled = false;
        var timeBetweenTicks = 1 / _flickerFrequency - _flickTime;
        var elapsedTime = 0f;

        if (timeBetweenTicks < 0)
        {
            throw new ArgumentOutOfRangeException(
                nameof(_flickTime), 
                _flickTime,
                "Flick time must be less than or equal to the time for tick"
            );
        }

        while (elapsedTime < _time)
        {
            _renderer.enabled = false;
            yield return new WaitForSeconds(_flickTime);
            elapsedTime += _flickTime;
            _renderer.enabled = true;

            yield return new WaitForSeconds(timeBetweenTicks);
            elapsedTime += timeBetweenTicks;
        }

        _collider.enabled = true;
    }
}
